version: '3' 
services:
  db-feed-item: 
    image: postgres:alpine
    container_name: "feed-item_db"
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: '1234'
      POSTGRES_DB: 'feed-item_db'
    ports:
      - 5433:5432
    expose:
      - 5433
    networks:
      - network-internal
  db-feed: 
    image: postgres:alpine
    container_name: "feed_db"
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: '1234'
      POSTGRES_DB: 'feed_db'
    ports:
      - 5432:5432
    expose:
      - 5432
    networks:
      - network-internal
  zookeeper:
    container_name: zookeeper
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "9093:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - network-internal
  kafka:
    container_name: kafka
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - network-internal
  # app:
    # restart: always
    # image: spannozzo/rss-reader:latest
    # build: 
      # context: ./rss-reader/
      # dockerfile: ./src/main/docker/Dockerfile.jvm
    # container_name: rss-reader-app      
    # environment:
       # - kafka.bootstrap.servers=kafka:9092     
    # ports:
      # - '8080:8080'
    # expose:
      # - '8080'
    # networks:
      # - network-internal
  
networks:
  network-internal:
    external: false 